<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>blog.mo-fu.org</title>
  <subtitle></subtitle>
  <id>http://blog.mo-fu.org/</id>
  <link href="http://blog.mo-fu.org/"/>
  <link href="http://blog.mo-fu.org/feed.xml" rel="self"/>
  <updated>2014-09-23T21:26:00+09:00</updated>
  <author>
    <name>Yuta Kurotaki</name>
  </author>
  <entry>
    <title>RubyKaigi2014とRubyHirobaに参加してきた</title>
    <link rel="alternate" href="http://blog.mo-fu.org/2014/09/23/rubykaigi2014-and-rubyhiroba2014.html"/>
    <id>http://blog.mo-fu.org/2014/09/23/rubykaigi2014-and-rubyhiroba2014.html</id>
    <published>2014-09-23T21:26:00+09:00</published>
    <updated>2014-09-23T21:28:57+09:00</updated>
    <author>
      <name>Yuta Kurotaki</name>
    </author>
    <content type="html">&lt;h2 id="rubykaigi2014とrubyhirobaに参加してきた"&gt;RubyKaigi2014とRubyHirobaに参加してきた&lt;/h2&gt;

&lt;p&gt;&lt;a href="http://rubykaigi.org/2014"&gt;RubyKaigi2014&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;沢山の学びがあった、懇親会では札幌RubyKaigi の時に一緒にスタッフやっていた方とお話できたりしてうれしかったです。
パーフェクトRubyとか家から持ってきて、サインもらえばよかった…。&lt;/p&gt;

&lt;p&gt;とりあえず&lt;a href="https://www.ruby-lang.org/en/news/2014/09/18/ruby-2.2.0-preview1-released/"&gt;Ruby2.2.0のpreview1&lt;/a&gt; を使って、自分が作ってるRailsアプリケーションを動かしたりしてます。&lt;/p&gt;

&lt;p&gt;RubyKaigi2014の翌日は&lt;a href="http://rubyhiroba.org/2014/"&gt;RubyHiroba&lt;/a&gt;に参加しました。
そこでは&lt;a href="http://railsgirls.com/tokyo"&gt;RailsGirlsTokyo4th&lt;/a&gt;でコーチをしました。今回がはじめてのコーチ業だったのですが、とても楽しく出来ました。自分も教えている中で勉強になることがたくさんありました。これからは、地域コミュニティにも少しづつ参加していこうと思います。&lt;/p&gt;

&lt;p&gt;3分でスポンサーLTというのをやりましたので、資料を置いておきます。&lt;/p&gt;

&lt;script async class="speakerdeck-embed" data-id="11fe6e0024210132bdda12a238f45ab0" data-ratio="1.33333333333333" src="//speakerdeck.com/assets/embed.js"&gt;&lt;/script&gt;

&lt;p&gt;ロリポおじさんに投票よろしくお願いします！&lt;/p&gt;

&lt;p&gt;とても充実した4日間でした。
RubyKaigi, RubyHirobaの関係者のみなさま、お疲れ様でした！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>yapc-asia-2014-day2</title>
    <link rel="alternate" href="http://blog.mo-fu.org/2014/09/02/yapc-asia-2014-day2.html"/>
    <id>http://blog.mo-fu.org/2014/09/02/yapc-asia-2014-day2.html</id>
    <published>2014-09-02T08:45:00+09:00</published>
    <updated>2014-09-02T09:59:48+09:00</updated>
    <author>
      <name>Yuta Kurotaki</name>
    </author>
    <content type="html">&lt;h1 id="yapc::asia-tokyo-2014-2日目に参加しました"&gt;YAPC::Asia Tokyo 2014 2日目に参加しました&lt;/h1&gt;

&lt;p&gt;&lt;a href="http://yapcasia.org/2014/"&gt;http://yapcasia.org/2014/&lt;/a&gt; の二日目に個人スポンサーとして参加してきました。
とても勉強になりました。印象に残ったプレゼンの感想を以下にまとめておきます。&lt;/p&gt;

&lt;h2 id="半端なphpdisでphperに陰で笑われないためのperl-monger向け最新php事情"&gt;半端なPHPDisでPHPerに陰で笑われないためのPerl Monger向け最新PHP事情&lt;/h2&gt;

&lt;p&gt;PHPの仕様を理解して、自分のシステムで活用しているからこそできるプレゼンだなと思いました。&lt;/p&gt;

&lt;p&gt;とてもおもしろかったです。ベストトーク賞おめでとうございます。
自分がPHPの言語仕様をもっと深く理解していたら、もっと笑えたと思う。&lt;/p&gt;

&lt;p&gt;PHP5.6 の追加された機能チェックしよう...
&lt;a href="http://php.net/archive/2014.php#id2014-08-28-1"&gt;http://php.net/archive/2014.php#id2014-08-28-1&lt;/a&gt;&lt;/p&gt;

&lt;h2 id="mobile-application-development-for-perl-mongers"&gt;Mobile Application Development for Perl Mongers&lt;/h2&gt;

&lt;p&gt;Webアプリとモバイルアプリの開発フローの違いについて色々と学ぶことが多かったです。
簡単にロールバックが出来なかったり、ユーザーが色々なバージョンを使っていてもそれなりに使えてしまうという点が
Webアプリと違っていてなるほど...と思いました。&lt;/p&gt;

&lt;p&gt;iPhone/Androidアプリのリリース時のタスクなどについても知ることが出来て良かった。&lt;/p&gt;

&lt;p&gt;あと、カバレッジ計測はあまり行われていないようだった。
組み込みのものは微妙みたいで、動かすとテスト落ちたりするらしい。&lt;/p&gt;

&lt;h2 id="ライトニングトーク"&gt;ライトニングトーク&lt;/h2&gt;

&lt;p&gt;今自分に足りないものを色々と確認することが出来ました。
外部のコミュニティやイベントにもっと参加していきたい！
と思える内容の発表がいくつかありました。&lt;/p&gt;

&lt;h2 id="キーノート"&gt;キーノート&lt;/h2&gt;

&lt;p&gt;今まで歩んできたキャリアの話や今やっていることの話を聞くことができました。
会社では受託開発をあえて50%残しているそうで、「新しい技術に出会えるのが楽しい」ということを話されていました。
自分もロールモデルにしている方はたくさんいるのですが、その人達を見習って、継続して勉強していこうと思います。&lt;/p&gt;

&lt;h2 id="その他"&gt;その他&lt;/h2&gt;

&lt;p&gt;運営スタッフの方々お疲れさまでした。快適に過ごすことが出来ました。
YAPCパーカーがとても良かったです。各社のノベルティももらって嬉しいものばかりでした。&lt;/p&gt;

&lt;p&gt;弊社のノベルティは写真だったのですが、
トートバッグから写真を取り出した時に、なんともいえない気持ちになりました。
今その写真は部屋の一番高い所に飾ってあります。&lt;/p&gt;

&lt;p&gt;あと、ラーメンを1日3回食べてる人がいたので体調が心配です。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>running-lean-1</title>
    <link rel="alternate" href="http://blog.mo-fu.org/2014/08/24/running-lean-1.html"/>
    <id>http://blog.mo-fu.org/2014/08/24/running-lean-1.html</id>
    <published>2014-08-24T20:31:00+09:00</published>
    <updated>2014-08-25T09:36:04+09:00</updated>
    <author>
      <name>Yuta Kurotaki</name>
    </author>
    <content type="html">&lt;h1 id="実践リーンスタートアップのイントロダクション"&gt;実践リーンスタートアップのイントロダクション&lt;/h1&gt;

&lt;p&gt;めも&lt;/p&gt;

&lt;h2 id="メタ原則"&gt;メタ原則&lt;/h2&gt;

&lt;p&gt;Running Leanの本質は以下の3つの手順に分けられる&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;プランAを文章化する&lt;/li&gt;
&lt;li&gt;プランで最もリスクの高い部分を見つける&lt;/li&gt;
&lt;li&gt;プランを体系的にテストする&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id="手順1"&gt;手順1&lt;/h3&gt;

&lt;p&gt;起業家の多くは強いビジョンとプランAを持っている
しかしプランAは役に立たない&lt;/p&gt;

&lt;p&gt;強いビジョンは理念や意義の形成に重要
リーンスタートアップは事実でビジョンを裏付ける&lt;/p&gt;

&lt;p&gt;テストされていない仮定や仮説を体系的にテストして改善していく事が必要&lt;/p&gt;

&lt;p&gt;ビジョンを書き出して少なくとも1人に共有する(リーンキャンバス)&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;顧客はあなたのソリューションに興味がない。興味があるのは、顧客自身の課題だ。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;投資家や顧客は、課題のことを気にかけているのであり、あなたのソリューションには(まだ)興味がない&lt;/p&gt;

&lt;p&gt;最高のソリューションを構築するだけでなく、ビジネスモデルの全体像を把握して、
各要素をうまくまとめることが必要&lt;/p&gt;

&lt;p&gt;リーンキャンバスとはビジネスモデルを9つの部品に分解し、
リスクの高いものから体系的にテストするもの&lt;/p&gt;

&lt;h3 id="手順2"&gt;手順2&lt;/h3&gt;

&lt;p&gt;成功する製品を構築するということは、リスクを緩和するということ&lt;/p&gt;

&lt;p&gt;スタートアップの最も大きなリスクとは、誰も欲しくないものを作ること&lt;/p&gt;

&lt;h4 id="スタートアップ3つのステージ"&gt;スタートアップ3つのステージ&lt;/h4&gt;

&lt;h5 id="1.-課題/解決フィット(problem/solution-fit)"&gt;1. 課題/解決フィット(Problem/Solution Fit)&lt;/h5&gt;

&lt;p&gt;解決に値する課題はあるか?
アイデアは安くても、それに取り組むコストは高い&lt;/p&gt;

&lt;p&gt;定性的な顧客観察とインタビュー技法を組み合わせて以下の3つの質問に答えていく&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;それは顧客が必要としているものですか? (必要性)&lt;/li&gt;
&lt;li&gt;顧客はお金を支払ってくれますか? 支払ってくれないのであれば、誰が支払ってくれますか? (成長性)&lt;/li&gt;
&lt;li&gt;それは解決可能ですか? (実現性)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ここから適切な課題に対応する最小限の機能を引き出す。
実用最小限の製品(MVP: Minimum Viable Product)&lt;/p&gt;

&lt;h5 id="2.-製品/市場フィット(product/market-fit)"&gt;2. 製品/市場フィット(Product/Market Fit)&lt;/h5&gt;

&lt;p&gt;誰かに必要とされるものを構築したか?&lt;/p&gt;

&lt;p&gt;解決に値する課題があり、MVPを構築できたら、
そのソリューションがどれだけ課題を解決しているかテストする
誰かに必要とされるものを構築したかを計測&lt;/p&gt;

&lt;p&gt;トランクション(事業が空回りしていないこと) 製品/市場フィットは最初の重要なマイルストーン
顧客に登録してもらい、定着させて、お金を払ってもらう&lt;/p&gt;

&lt;h5 id="3.-拡大(scale)"&gt;3. 拡大(Scale)&lt;/h5&gt;

&lt;p&gt;どうやって成長を加速させるのか?&lt;/p&gt;

&lt;p&gt;成長に目を向ける、ビジネスモデルの拡大&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;製品/市場フィットの前: 検証による学習とピボット&lt;/li&gt;
&lt;li&gt;製品/市場フィット後: 成長と最適化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ピボットとは、学習を続けながらスタートアップの方向性を変更すること
ピボットはうまくいくプランを探すことであり、最適化はプランを加速するという違いがある&lt;/p&gt;

&lt;p&gt;学習を最大化するには、大胆な成果を狙うべき
「送信」ボタンの色を変更するよりも、ランディングページ全体を変更したほうがよい&lt;/p&gt;

&lt;p&gt;1つの顧客セグメントのUVP(独自の価値提案: Unique value Proposition)を変更するよりも、
複数の顧客セグメントにさまざまなUVPを試すほうがよい&lt;/p&gt;

&lt;p&gt;資金調達に適した時期は 製品/市場フィット後&lt;/p&gt;

&lt;h3 id="手順3"&gt;手順3&lt;/h3&gt;

&lt;p&gt;プランを体系的にテストする&lt;/p&gt;

&lt;p&gt;実験とはなにか
構築 - 計測 - 学習ループ&lt;/p&gt;

&lt;p&gt;イテレーションのメタパターン&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ggplot2をインストールして使うまで</title>
    <link rel="alternate" href="http://blog.mo-fu.org/2014/01/09/install-ggplot2.html"/>
    <id>http://blog.mo-fu.org/2014/01/09/install-ggplot2.html</id>
    <published>2014-01-09T01:45:38+09:00</published>
    <updated>2014-06-09T22:55:43+09:00</updated>
    <author>
      <name>Yuta Kurotaki</name>
    </author>
    <content type="html">&lt;h2 id="インストール"&gt;インストール&lt;/h2&gt;

&lt;p&gt;Rコンソールを開いて以下のコマンドを入力する。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;install.packages("ggplot2")

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="グラフを出力する"&gt;グラフを出力する&lt;/h2&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;&amp;gt; library(ggplot2)
&amp;gt; data &amp;lt;- read.csv("/Users/yuta/201401-lines-of-code.csv")
&amp;gt; data
  day lines
1   1    53
2   2   100
3   3    64
4   4     0
5   5     8
6   6    34
7   7    79
8   8   206
&amp;gt; ggplot(data, aes(x=day, y=lines)) + geom_line() + geom_point()

&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>SqaleからAmazonS3にDBをバックアップする</title>
    <link rel="alternate" href="http://blog.mo-fu.org/2014/01/05/backup-to-amazon-s3.html"/>
    <id>http://blog.mo-fu.org/2014/01/05/backup-to-amazon-s3.html</id>
    <published>2014-01-05T18:34:38+09:00</published>
    <updated>2014-06-09T22:55:43+09:00</updated>
    <author>
      <name>Yuta Kurotaki</name>
    </author>
    <content type="html">&lt;p&gt;Sqale で運用しているアプリケーションのDBのdumpファイルを
S3のバケットに保存する方法です。&lt;/p&gt;

&lt;h2 id="はじめに"&gt;はじめに&lt;/h2&gt;

&lt;p&gt;AWSのAccess Keyを管理画面で閲覧してメモしておいてください。
Security Credentials を選択、Access Keys をクリックするとAccess Key IDが表示されます。&lt;/p&gt;

&lt;p&gt;こちらにアクセスキーに関する説明があります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blogs.aws.amazon.com/security/post/Tx1R9KDN9ISZ0HF/Where-s-my-secret-access-key"&gt;http://blogs.aws.amazon.com/security/post/Tx1R9KDN9ISZ0HF/Where-s-my-secret-access-key&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="s3にバケット作成する"&gt;S3にバケット作成する&lt;/h2&gt;

&lt;p&gt;gateway.sqale.jp にsshログイン。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;ssh gateway.sqale.jp -p 2222
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のコマンドを入力したあと、AWSのアクセスキーとシークレットキー入力します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;s3cmd --configure

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;s3cmd mb&lt;/code&gt; コマンドでS3にバケットを作成します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;s3cmd mb s3://sampleapp-backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のようにメッセージが出力されれば、バケットの作成が完了です。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;Bucket 's3://sampleapp-backup/' created
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="s3にdumpファイルをアップロードする"&gt;S3にdumpファイルをアップロードする&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;s3cmd put&lt;/code&gt; コマンドでdumpファイルをアップロードします。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;s3cmd put 20140105-sampleapp-mysql.dump s3://sampleapp-backup/20140105-sampleapp-mysql.dump
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="定期的にdumpファイルをs3に保存する"&gt;定期的にdumpファイルをS3に保存する&lt;/h2&gt;

&lt;p&gt;以下のようにrake task を作成してcronで設定すれば、
定期的にdumpファイルを保存することができます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="ss"&gt;:db&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"mysql dump: db backup to Amazon S3"&lt;/span&gt;

  &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:backup&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="ss"&gt;:environment&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"mysqldump -u &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SQALE_USERNAME'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -h &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SQALE_HOST'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; -p &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SQALE_DATABASE'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; --password=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SQALE_PASSWORD'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;gt; ../tmp/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y%m%d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-sampleapp-mysql.dump"&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"s3cmd put ../tmp/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;strftime&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'%Y%m%d'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;-sampleapp-mysql.dump s3://sampleapp-backup/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;year&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;month&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;/"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="参考url"&gt;参考URL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blogs.aws.amazon.com/security/post/Tx1R9KDN9ISZ0HF/Where-s-my-secret-access-key"&gt;http://blogs.aws.amazon.com/security/post/Tx1R9KDN9ISZ0HF/Where-s-my-secret-access-key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://sqale.jp/support/manual/db-backup-restore"&gt;https://sqale.jp/support/manual/db-backup-restore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>hetemlレンタルサーバーでgitを使う</title>
    <link rel="alternate" href="http://blog.mo-fu.org/2013/12/24/how-to-use-git-on-heteml.html"/>
    <id>http://blog.mo-fu.org/2013/12/24/how-to-use-git-on-heteml.html</id>
    <published>2013-12-24T08:45:47+09:00</published>
    <updated>2014-06-09T22:55:43+09:00</updated>
    <author>
      <name>Yuta Kurotaki</name>
    </author>
    <content type="html">&lt;h2 id="gitの初期設定"&gt;gitの初期設定&lt;/h2&gt;

&lt;p&gt;ターミナルを使ってsshでログインします。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;ssh username@ssh***.heteml.jp -p 2222
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2013/12/24現在gitのバージョンは1.7.3.4でした。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;-bash-3.00$ pwd
/home/sites/heteml/users***/u/s/e/username

-bash-3.00$ git --version
git version 1.7.3.4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ログイン後、ユーザー名とメールアドレス等の設定をします。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;# ユーザー名とメールアドレスの設定
git config --global user.email "username@example.com"  
git config --global user.name "username"

# 端末に色つきの文字を出力する
git config --global color.ui auto
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;設定を確認します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git config --global --list
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="heteml上にリポジトリを作成する"&gt;heteml上にリポジトリを作成する&lt;/h2&gt;

&lt;p&gt;ディレクトリを作成して、移動します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;mkdir myproject
cd myproject
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git init コマンドでリポジトリを作成します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git init
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;Initialized empty Git repository in /home/sites/heteml/users***/u/s/e/username/myproject/.git/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;index.html を作成します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;touch index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git status コマンドで変更内容を確認します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コマンドを実行すると、以下のように表示されます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;# On branch master
#
# Initial commit
#
# Untracked files:
#   (use "git add &amp;lt;file&amp;gt;..." to include in what will be committed)
#
#   index.html
nothing added to commit but untracked files present (use "git add" to track)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git add コマンドを実行します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git add index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git add した後に git status コマンドを実行すると、以下のように表示されます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use "git rm --cached &amp;lt;file&amp;gt;..." to unstage)
#
#   new file:   index.html
#

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git commit コマンドでコミットします。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git commit -m 'first commit'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;tig や git log で確認するとコミット履歴を見ることが出来ます。&lt;/p&gt;

&lt;h2 id="hetemlにリポジトリを作成してローカルpcからpushする"&gt;hetemlにリポジトリを作成してローカルPCからpushする&lt;/h2&gt;

&lt;p&gt;heteml に sshログインして、ディレクトリを作成します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;mkdir repos
cd repos
mkdir myproject.git
cd myproject.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git init コマンドでリポジトリを作成します。
この時に &lt;code&gt;--bare&lt;/code&gt; オプションを指定すると変更のみを管理するリポジトリを作成することができます。
また、 &lt;code&gt;--shared&lt;/code&gt; オプションを指定すると共同リポジトリとして作成することが出来ます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git init --bare --shared
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ローカルPCでmyprojectのリポジトリを作成します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;mkdir myproject
cd myproject
git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hetemlに作成したリポジトリのURLを git remote コマンドで登録します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git remote add origin ssh://username@ssh***.heteml.jp:2222/home/sites/heteml/users***/u/s/e/username/repos/myproject.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;git remote -v で登録情報を確認できます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git remote -v
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ファイルを作成します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;touch a.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;add して commit します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git add .
git commit -m 'inital import'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hetemlのリポジトリにpushして変更内容を反映させます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;sshログインのためのパスワードを聞かれるので、入力して下さい。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;-----------------------------------------------------
--***-------------------------------------------***--
--***---------------***-------------------------***--
--***---------------******----------------------***--
--********-********-******-********-***********-***--
--********-***--***-***----***--***-***********-***--
--***--***-********-***----********-***-***-***-***--
--***--***-***------******-***------***-***-***-***--
--***--***-********-******-********-***-***-***-***--
-----------------------------------------------------

username@ssh***.heteml.jp's password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;パスワードを入力すると、以下のようにhetemlのリポジトリに変更内容が反映されます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;Counting objects: 3, done.
Writing objects: 100% (3/3), 215 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To ssh://kuro96@ssh160.heteml.jp:2222/home/sites/heteml/users160/k/u/r/kuro96/repos/myproject.git
 * [new branch]      master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hetemlにsshログイン後、myproject.git に移動して、&lt;code&gt;git log -p&lt;/code&gt; コマンドで変更内容を確認します。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;cd repos/myproject.git
git log -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以下のように変更が反映されていることを確認できます。&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;commit 522111a8845c66aebb95de63bb6a65d405d33c2c
Author: kurotaky &amp;lt;username@example.com&amp;gt;
Date:   Tue Dec 24 09:43:43 2013 +0900

    inital import

diff --git a/a.txt b/a.txt
new file mode 100644
index 0000000..e69de29
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id="参考url"&gt;参考URL&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://d.hatena.ne.jp/bannyan/20100308/1268066849"&gt;http://d.hatena.ne.jp/bannyan/20100308/1268066849&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://git-scm.com/book/ja/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-Git-%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E5%8F%96%E5%BE%97"&gt;http://git-scm.com/book/ja/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-Git-%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%AE%E5%8F%96%E5%BE%97&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id="参考文献"&gt;参考文献&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.amazon.co.jp/dp/4274068641"&gt;http://www.amazon.co.jp/dp/4274068641&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
